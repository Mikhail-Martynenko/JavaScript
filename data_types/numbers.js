// 1. Сумма пользовательских чисел
// создайте скрипт, который запрашивает ввод двух чисел (используйте prompt) и после показывает их сумму.
//
// Запустить демо
//
// P.S. Есть «подводный камень» при работе с типами.
// let a = +prompt('Введите число a', 0)
// let b = +prompt('Введите число b', 0)
// alert(a + b)


// 2. Почему 6.35.toFixed(1) == 6.3?
// Методы Math.round и toFixed, согласно документации, округляют до ближайшего целого числа: 0..4 округляется в меньшую сторону, тогда как 5..9 в большую сторону.
//
// Например:
//
// alert( 1.35.toFixed(1) ); // 1.4
// Но почему в примере ниже 6.35 округляется до 6.3?
//
// alert( 6.35.toFixed(1) ); // 6.3
// Как правильно округлить 6.35?

// Ответ
//Приблизить его к целому числу, перед округлением:
// alert((6.35 * 10).toFixed(20));


//3. Ввод числового значения
// создайте функцию readNumber, которая будет запрашивать ввод числового значения
// до тех пор, пока посетитель его не введёт.
//
// Функция должна возвращать числовое значение.
//
// Также надо разрешить пользователю остановить процесс ввода, отправив пустую строку или нажав «Отмена».
// В этом случае функция должна вернуть null.
// const readNumber = () => ((num = prompt("Введите число", 0)) === null || num === '' || !isFinite(num)) ? null : +num;
//
// const readNumber2 = () => {
//     let num;
//
//     do {
//         num = prompt("Введите число:", "");
//         if (num === null) {
//             return null;
//         }
//     } while (!isFinite(num));
//
//     return +num;
// };
// alert(`Число: ${readNumber2()}`);
//4. Бесконечный цикл по ошибке
// Этот цикл – бесконечный. Он никогда не завершится, почему?
//
// let i = 0;
// while (i != 10) {
//   i += 0.2;
// }

// Ответ
// Из-за потери точности i никогда не будет равно 10

//5. Случайное число от min до max
// Встроенный метод Math.random() возвращает случайное число от 0 (включительно) до 1 (но не включая 1)
//
// Напишите функцию random(min, max), которая генерирует случайное число с плавающей точкой от min до max (но не включая max).
//
// Пример работы функции:
//
// alert( random(1, 5) ); // 1.2345623452
// alert( random(1, 5) ); // 3.7894332423
// alert( random(1, 5) ); // 4.3435234525
const random = (min, max) => min + Math.random() * (max - min);

//вариант с нормальным распределением с использованием функции Бокса-Мюллера
// z = sqrt(-2.0 * log(u)) * cos(2.0 * PI * v)
const randomNormal = (min, max) => {
    const u = Math.random();
    const v = Math.random();
    const z = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);
    const range = max - min;
    const mean = (max + min) / 2.0;
    const value = Math.round(z * (range / 6.0) + mean);
    return Math.min(Math.max(value, min), max);
}

const map = {}

for (let i = 0; i < 100000; i++) {
    const r = Math.round(randomNormal(1, 10));
    map[r] = (map[r] ?? 0) + 1
}

console.log(map)