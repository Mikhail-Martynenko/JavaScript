// Finally или просто код?
// Сравните два фрагмента кода.
//
// Первый использует finally для выполнения кода после try..catch:
//
// try {
//   начать работу
//   работать
// } catch (e) {
//   обработать ошибку
// } finally {
//   очистить рабочее пространство
// }
// Второй фрагмент просто ставит очистку после try..catch:
//
// try {
//   начать работу
//   работать
// } catch (e) {
//   обработать ошибку
// }
//
// очистить рабочее пространство
// Нам определённо нужна очистка после работы, неважно возникли ошибки или нет.
//
// Есть ли здесь преимущество в использовании finally или оба фрагмента кода одинаковы? Если такое преимущество есть, то дайте пример, когда оно проявляется.


// Поведение будет различным, если управление каким-то образом выпрыгнет из try..catch.

function foo() {
    try {
        alert('start');
        throw new Error("error");
    } catch (e) {

    } finally {
        alert('clear!')
    }
}

foo(); // clear!

//Именно finally гарантирует очистку. Если мы просто поместим код в конце foo, то он не выполнится